@model SIAProjeto.Models.Utilizador

@{
    ViewBag.Title = "Bem-Vindo";
}

<div class="row bg-title">
    <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">
        <h4 class="page-title">Bem Vindo</h4>
    </div>
</div>

<div class="row">
    <div class="col-md-12 col-xs-12">
        <div class="white-box">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal form-material">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        <label for="example-email" class="col-md-12">E-mail</label>
                        <div class="col-md-12">
                            @if (Convert.ToBoolean(ViewBag.isUtilizadorBloqueado) == true)
                            {
                                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control form-control-line", name = "example-email", id = "example-email", disabled = true } });
                                @Html.ValidationMessageFor(model => model.email, "Esgotou o número de tentativas de autenticação! Encontra-se agora bloqueado do sistema por cinco minutos.", new { @class = "text-danger" });
                            }
                            else
                            {
                                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control form-control-line", name = "example-email", id = "example-email" } });
                                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" });
                            }
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="col-md-12">Palavra-Passe</label>
                        <div class="col-md-12">
                            @if (Convert.ToBoolean(ViewBag.isUtilizadorBloqueado) == true)
                            {
                                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control form-control-line", disabled = true } });
                            }
                            else
                            {
                                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control form-control-line" } });
                            }
                            @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <div class="col-sm-12">
                            <input type="submit" value="Entrar" class="btn btn-success" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>