#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIAProjeto.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DBMain")]
	public partial class DataClassesDBMainDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPergunta(Pergunta instance);
    partial void UpdatePergunta(Pergunta instance);
    partial void DeletePergunta(Pergunta instance);
    partial void InsertUtilizador(Utilizador instance);
    partial void UpdateUtilizador(Utilizador instance);
    partial void DeleteUtilizador(Utilizador instance);
    partial void InsertPergunta_Quadrante(Pergunta_Quadrante instance);
    partial void UpdatePergunta_Quadrante(Pergunta_Quadrante instance);
    partial void DeletePergunta_Quadrante(Pergunta_Quadrante instance);
    partial void InsertPermissao(Permissao instance);
    partial void UpdatePermissao(Permissao instance);
    partial void DeletePermissao(Permissao instance);
    partial void InsertPermissao_TipoUtilizador(Permissao_TipoUtilizador instance);
    partial void UpdatePermissao_TipoUtilizador(Permissao_TipoUtilizador instance);
    partial void DeletePermissao_TipoUtilizador(Permissao_TipoUtilizador instance);
    partial void InsertPontuacao_Pergunta(Pontuacao_Pergunta instance);
    partial void UpdatePontuacao_Pergunta(Pontuacao_Pergunta instance);
    partial void DeletePontuacao_Pergunta(Pontuacao_Pergunta instance);
    partial void InsertPontuacao_Quadrante(Pontuacao_Quadrante instance);
    partial void UpdatePontuacao_Quadrante(Pontuacao_Quadrante instance);
    partial void DeletePontuacao_Quadrante(Pontuacao_Quadrante instance);
    partial void InsertQuadrante(Quadrante instance);
    partial void UpdateQuadrante(Quadrante instance);
    partial void DeleteQuadrante(Quadrante instance);
    partial void InsertQuadrante_Tecnica(Quadrante_Tecnica instance);
    partial void UpdateQuadrante_Tecnica(Quadrante_Tecnica instance);
    partial void DeleteQuadrante_Tecnica(Quadrante_Tecnica instance);
    partial void InsertTecnica(Tecnica instance);
    partial void UpdateTecnica(Tecnica instance);
    partial void DeleteTecnica(Tecnica instance);
    partial void InsertTeste(Teste instance);
    partial void UpdateTeste(Teste instance);
    partial void DeleteTeste(Teste instance);
    partial void InsertTipoUtilizador(TipoUtilizador instance);
    partial void UpdateTipoUtilizador(TipoUtilizador instance);
    partial void DeleteTipoUtilizador(TipoUtilizador instance);
    #endregion
		
		public DataClassesDBMainDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DBMainConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDBMainDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDBMainDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDBMainDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDBMainDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Pergunta> Perguntas
		{
			get
			{
				return this.GetTable<Pergunta>();
			}
		}
		
		public System.Data.Linq.Table<Utilizador> Utilizadors
		{
			get
			{
				return this.GetTable<Utilizador>();
			}
		}
		
		public System.Data.Linq.Table<Pergunta_Quadrante> Pergunta_Quadrantes
		{
			get
			{
				return this.GetTable<Pergunta_Quadrante>();
			}
		}
		
		public System.Data.Linq.Table<Permissao> Permissaos
		{
			get
			{
				return this.GetTable<Permissao>();
			}
		}
		
		public System.Data.Linq.Table<Permissao_TipoUtilizador> Permissao_TipoUtilizadors
		{
			get
			{
				return this.GetTable<Permissao_TipoUtilizador>();
			}
		}
		
		public System.Data.Linq.Table<Pontuacao_Pergunta> Pontuacao_Perguntas
		{
			get
			{
				return this.GetTable<Pontuacao_Pergunta>();
			}
		}
		
		public System.Data.Linq.Table<Pontuacao_Quadrante> Pontuacao_Quadrantes
		{
			get
			{
				return this.GetTable<Pontuacao_Quadrante>();
			}
		}
		
		public System.Data.Linq.Table<Quadrante> Quadrantes
		{
			get
			{
				return this.GetTable<Quadrante>();
			}
		}
		
		public System.Data.Linq.Table<Quadrante_Tecnica> Quadrante_Tecnicas
		{
			get
			{
				return this.GetTable<Quadrante_Tecnica>();
			}
		}
		
		public System.Data.Linq.Table<Tecnica> Tecnicas
		{
			get
			{
				return this.GetTable<Tecnica>();
			}
		}
		
		public System.Data.Linq.Table<Teste> Testes
		{
			get
			{
				return this.GetTable<Teste>();
			}
		}
		
		public System.Data.Linq.Table<TipoUtilizador> TipoUtilizadors
		{
			get
			{
				return this.GetTable<TipoUtilizador>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pergunta")]
	public partial class Pergunta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPergunta;
		
		private int _idUtilizador;
		
		private string _texto;
		
		private int _importancia;
		
		private EntitySet<Pergunta_Quadrante> _Pergunta_Quadrantes;
		
		private EntityRef<Utilizador> _Utilizador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPerguntaChanging(int value);
    partial void OnidPerguntaChanged();
    partial void OnidUtilizadorChanging(int value);
    partial void OnidUtilizadorChanged();
    partial void OntextoChanging(string value);
    partial void OntextoChanged();
    partial void OnimportanciaChanging(int value);
    partial void OnimportanciaChanged();
    #endregion
		
		public Pergunta()
		{
			this._Pergunta_Quadrantes = new EntitySet<Pergunta_Quadrante>(new Action<Pergunta_Quadrante>(this.attach_Pergunta_Quadrantes), new Action<Pergunta_Quadrante>(this.detach_Pergunta_Quadrantes));
			this._Utilizador = default(EntityRef<Utilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPergunta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPergunta
		{
			get
			{
				return this._idPergunta;
			}
			set
			{
				if ((this._idPergunta != value))
				{
					this.OnidPerguntaChanging(value);
					this.SendPropertyChanging();
					this._idPergunta = value;
					this.SendPropertyChanged("idPergunta");
					this.OnidPerguntaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUtilizador", DbType="Int NOT NULL")]
		public int idUtilizador
		{
			get
			{
				return this._idUtilizador;
			}
			set
			{
				if ((this._idUtilizador != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUtilizadorChanging(value);
					this.SendPropertyChanging();
					this._idUtilizador = value;
					this.SendPropertyChanged("idUtilizador");
					this.OnidUtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_texto", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string texto
		{
			get
			{
				return this._texto;
			}
			set
			{
				if ((this._texto != value))
				{
					this.OntextoChanging(value);
					this.SendPropertyChanging();
					this._texto = value;
					this.SendPropertyChanged("texto");
					this.OntextoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_importancia", DbType="Int NOT NULL")]
		public int importancia
		{
			get
			{
				return this._importancia;
			}
			set
			{
				if ((this._importancia != value))
				{
					this.OnimportanciaChanging(value);
					this.SendPropertyChanging();
					this._importancia = value;
					this.SendPropertyChanged("importancia");
					this.OnimportanciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pergunta_Pergunta_Quadrante", Storage="_Pergunta_Quadrantes", ThisKey="idPergunta", OtherKey="idPergunta")]
		public EntitySet<Pergunta_Quadrante> Pergunta_Quadrantes
		{
			get
			{
				return this._Pergunta_Quadrantes;
			}
			set
			{
				this._Pergunta_Quadrantes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Pergunta", Storage="_Utilizador", ThisKey="idUtilizador", OtherKey="idUtilizador", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Perguntas.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Perguntas.Add(this);
						this._idUtilizador = value.idUtilizador;
					}
					else
					{
						this._idUtilizador = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pergunta_Quadrantes(Pergunta_Quadrante entity)
		{
			this.SendPropertyChanging();
			entity.Pergunta = this;
		}
		
		private void detach_Pergunta_Quadrantes(Pergunta_Quadrante entity)
		{
			this.SendPropertyChanging();
			entity.Pergunta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utilizador")]
	public partial class Utilizador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idUtilizador;
		
		private string _nome;
		
		private string _email;
		
		private string _password;
		
		private bool _estadoAtivacao;
		
		private bool _estadoAutenticacao;
		
		private System.DateTime _dataRegisto;
		
		private System.Nullable<System.DateTime> _dataUltimaAutenticacao;
		
		private int _idTipoUtilizador;
		
		private EntitySet<Pergunta> _Perguntas;
		
		private EntitySet<Quadrante> _Quadrantes;
		
		private EntitySet<Tecnica> _Tecnicas;
		
		private EntitySet<Teste> _Testes;
		
		private EntityRef<TipoUtilizador> _TipoUtilizador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidUtilizadorChanging(int value);
    partial void OnidUtilizadorChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnestadoAtivacaoChanging(bool value);
    partial void OnestadoAtivacaoChanged();
    partial void OnestadoAutenticacaoChanging(bool value);
    partial void OnestadoAutenticacaoChanged();
    partial void OndataRegistoChanging(System.DateTime value);
    partial void OndataRegistoChanged();
    partial void OndataUltimaAutenticacaoChanging(System.Nullable<System.DateTime> value);
    partial void OndataUltimaAutenticacaoChanged();
    partial void OnidTipoUtilizadorChanging(int value);
    partial void OnidTipoUtilizadorChanged();
    #endregion
		
		public Utilizador()
		{
			this._Perguntas = new EntitySet<Pergunta>(new Action<Pergunta>(this.attach_Perguntas), new Action<Pergunta>(this.detach_Perguntas));
			this._Quadrantes = new EntitySet<Quadrante>(new Action<Quadrante>(this.attach_Quadrantes), new Action<Quadrante>(this.detach_Quadrantes));
			this._Tecnicas = new EntitySet<Tecnica>(new Action<Tecnica>(this.attach_Tecnicas), new Action<Tecnica>(this.detach_Tecnicas));
			this._Testes = new EntitySet<Teste>(new Action<Teste>(this.attach_Testes), new Action<Teste>(this.detach_Testes));
			this._TipoUtilizador = default(EntityRef<TipoUtilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUtilizador", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idUtilizador
		{
			get
			{
				return this._idUtilizador;
			}
			set
			{
				if ((this._idUtilizador != value))
				{
					this.OnidUtilizadorChanging(value);
					this.SendPropertyChanging();
					this._idUtilizador = value;
					this.SendPropertyChanged("idUtilizador");
					this.OnidUtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estadoAtivacao", DbType="Bit NOT NULL")]
		public bool estadoAtivacao
		{
			get
			{
				return this._estadoAtivacao;
			}
			set
			{
				if ((this._estadoAtivacao != value))
				{
					this.OnestadoAtivacaoChanging(value);
					this.SendPropertyChanging();
					this._estadoAtivacao = value;
					this.SendPropertyChanged("estadoAtivacao");
					this.OnestadoAtivacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_estadoAutenticacao", DbType="Bit NOT NULL")]
		public bool estadoAutenticacao
		{
			get
			{
				return this._estadoAutenticacao;
			}
			set
			{
				if ((this._estadoAutenticacao != value))
				{
					this.OnestadoAutenticacaoChanging(value);
					this.SendPropertyChanging();
					this._estadoAutenticacao = value;
					this.SendPropertyChanged("estadoAutenticacao");
					this.OnestadoAutenticacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataRegisto", DbType="DateTime NOT NULL")]
		public System.DateTime dataRegisto
		{
			get
			{
				return this._dataRegisto;
			}
			set
			{
				if ((this._dataRegisto != value))
				{
					this.OndataRegistoChanging(value);
					this.SendPropertyChanging();
					this._dataRegisto = value;
					this.SendPropertyChanged("dataRegisto");
					this.OndataRegistoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataUltimaAutenticacao", DbType="DateTime")]
		public System.Nullable<System.DateTime> dataUltimaAutenticacao
		{
			get
			{
				return this._dataUltimaAutenticacao;
			}
			set
			{
				if ((this._dataUltimaAutenticacao != value))
				{
					this.OndataUltimaAutenticacaoChanging(value);
					this.SendPropertyChanging();
					this._dataUltimaAutenticacao = value;
					this.SendPropertyChanged("dataUltimaAutenticacao");
					this.OndataUltimaAutenticacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipoUtilizador", DbType="Int NOT NULL")]
		public int idTipoUtilizador
		{
			get
			{
				return this._idTipoUtilizador;
			}
			set
			{
				if ((this._idTipoUtilizador != value))
				{
					if (this._TipoUtilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoUtilizadorChanging(value);
					this.SendPropertyChanging();
					this._idTipoUtilizador = value;
					this.SendPropertyChanged("idTipoUtilizador");
					this.OnidTipoUtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Pergunta", Storage="_Perguntas", ThisKey="idUtilizador", OtherKey="idUtilizador")]
		public EntitySet<Pergunta> Perguntas
		{
			get
			{
				return this._Perguntas;
			}
			set
			{
				this._Perguntas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Quadrante", Storage="_Quadrantes", ThisKey="idUtilizador", OtherKey="idUtilizador")]
		public EntitySet<Quadrante> Quadrantes
		{
			get
			{
				return this._Quadrantes;
			}
			set
			{
				this._Quadrantes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Tecnica", Storage="_Tecnicas", ThisKey="idUtilizador", OtherKey="idUtilizador")]
		public EntitySet<Tecnica> Tecnicas
		{
			get
			{
				return this._Tecnicas;
			}
			set
			{
				this._Tecnicas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Teste", Storage="_Testes", ThisKey="idUtilizador", OtherKey="idUtilizador")]
		public EntitySet<Teste> Testes
		{
			get
			{
				return this._Testes;
			}
			set
			{
				this._Testes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUtilizador_Utilizador", Storage="_TipoUtilizador", ThisKey="idTipoUtilizador", OtherKey="idTipoUtilizador", IsForeignKey=true)]
		public TipoUtilizador TipoUtilizador
		{
			get
			{
				return this._TipoUtilizador.Entity;
			}
			set
			{
				TipoUtilizador previousValue = this._TipoUtilizador.Entity;
				if (((previousValue != value) 
							|| (this._TipoUtilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoUtilizador.Entity = null;
						previousValue.Utilizadors.Remove(this);
					}
					this._TipoUtilizador.Entity = value;
					if ((value != null))
					{
						value.Utilizadors.Add(this);
						this._idTipoUtilizador = value.idTipoUtilizador;
					}
					else
					{
						this._idTipoUtilizador = default(int);
					}
					this.SendPropertyChanged("TipoUtilizador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Perguntas(Pergunta entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Perguntas(Pergunta entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
		
		private void attach_Quadrantes(Quadrante entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Quadrantes(Quadrante entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
		
		private void attach_Tecnicas(Tecnica entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Tecnicas(Tecnica entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
		
		private void attach_Testes(Teste entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Testes(Teste entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pergunta_Quadrante")]
	public partial class Pergunta_Quadrante : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPergunta_Quadrante;
		
		private int _idPergunta;
		
		private int _idQuadrante;
		
		private EntitySet<Pontuacao_Pergunta> _Pontuacao_Perguntas;
		
		private EntityRef<Pergunta> _Pergunta;
		
		private EntityRef<Quadrante> _Quadrante;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPergunta_QuadranteChanging(int value);
    partial void OnidPergunta_QuadranteChanged();
    partial void OnidPerguntaChanging(int value);
    partial void OnidPerguntaChanged();
    partial void OnidQuadranteChanging(int value);
    partial void OnidQuadranteChanged();
    #endregion
		
		public Pergunta_Quadrante()
		{
			this._Pontuacao_Perguntas = new EntitySet<Pontuacao_Pergunta>(new Action<Pontuacao_Pergunta>(this.attach_Pontuacao_Perguntas), new Action<Pontuacao_Pergunta>(this.detach_Pontuacao_Perguntas));
			this._Pergunta = default(EntityRef<Pergunta>);
			this._Quadrante = default(EntityRef<Quadrante>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPergunta_Quadrante", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPergunta_Quadrante
		{
			get
			{
				return this._idPergunta_Quadrante;
			}
			set
			{
				if ((this._idPergunta_Quadrante != value))
				{
					this.OnidPergunta_QuadranteChanging(value);
					this.SendPropertyChanging();
					this._idPergunta_Quadrante = value;
					this.SendPropertyChanged("idPergunta_Quadrante");
					this.OnidPergunta_QuadranteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPergunta", DbType="Int NOT NULL")]
		public int idPergunta
		{
			get
			{
				return this._idPergunta;
			}
			set
			{
				if ((this._idPergunta != value))
				{
					if (this._Pergunta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPerguntaChanging(value);
					this.SendPropertyChanging();
					this._idPergunta = value;
					this.SendPropertyChanged("idPergunta");
					this.OnidPerguntaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idQuadrante", DbType="Int NOT NULL")]
		public int idQuadrante
		{
			get
			{
				return this._idQuadrante;
			}
			set
			{
				if ((this._idQuadrante != value))
				{
					if (this._Quadrante.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidQuadranteChanging(value);
					this.SendPropertyChanging();
					this._idQuadrante = value;
					this.SendPropertyChanged("idQuadrante");
					this.OnidQuadranteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pergunta_Quadrante_Pontuacao_Pergunta", Storage="_Pontuacao_Perguntas", ThisKey="idPergunta_Quadrante", OtherKey="idPergunta_Quadrante")]
		public EntitySet<Pontuacao_Pergunta> Pontuacao_Perguntas
		{
			get
			{
				return this._Pontuacao_Perguntas;
			}
			set
			{
				this._Pontuacao_Perguntas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pergunta_Pergunta_Quadrante", Storage="_Pergunta", ThisKey="idPergunta", OtherKey="idPergunta", IsForeignKey=true)]
		public Pergunta Pergunta
		{
			get
			{
				return this._Pergunta.Entity;
			}
			set
			{
				Pergunta previousValue = this._Pergunta.Entity;
				if (((previousValue != value) 
							|| (this._Pergunta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pergunta.Entity = null;
						previousValue.Pergunta_Quadrantes.Remove(this);
					}
					this._Pergunta.Entity = value;
					if ((value != null))
					{
						value.Pergunta_Quadrantes.Add(this);
						this._idPergunta = value.idPergunta;
					}
					else
					{
						this._idPergunta = default(int);
					}
					this.SendPropertyChanged("Pergunta");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quadrante_Pergunta_Quadrante", Storage="_Quadrante", ThisKey="idQuadrante", OtherKey="idQuadrante", IsForeignKey=true)]
		public Quadrante Quadrante
		{
			get
			{
				return this._Quadrante.Entity;
			}
			set
			{
				Quadrante previousValue = this._Quadrante.Entity;
				if (((previousValue != value) 
							|| (this._Quadrante.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quadrante.Entity = null;
						previousValue.Pergunta_Quadrantes.Remove(this);
					}
					this._Quadrante.Entity = value;
					if ((value != null))
					{
						value.Pergunta_Quadrantes.Add(this);
						this._idQuadrante = value.idQuadrante;
					}
					else
					{
						this._idQuadrante = default(int);
					}
					this.SendPropertyChanged("Quadrante");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pontuacao_Perguntas(Pontuacao_Pergunta entity)
		{
			this.SendPropertyChanging();
			entity.Pergunta_Quadrante = this;
		}
		
		private void detach_Pontuacao_Perguntas(Pontuacao_Pergunta entity)
		{
			this.SendPropertyChanging();
			entity.Pergunta_Quadrante = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permissao")]
	public partial class Permissao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPermissao;
		
		private string _nome;
		
		private string _descricao;
		
		private EntitySet<Permissao_TipoUtilizador> _Permissao_TipoUtilizadors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPermissaoChanging(int value);
    partial void OnidPermissaoChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OndescricaoChanging(string value);
    partial void OndescricaoChanged();
    #endregion
		
		public Permissao()
		{
			this._Permissao_TipoUtilizadors = new EntitySet<Permissao_TipoUtilizador>(new Action<Permissao_TipoUtilizador>(this.attach_Permissao_TipoUtilizadors), new Action<Permissao_TipoUtilizador>(this.detach_Permissao_TipoUtilizadors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPermissao", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPermissao
		{
			get
			{
				return this._idPermissao;
			}
			set
			{
				if ((this._idPermissao != value))
				{
					this.OnidPermissaoChanging(value);
					this.SendPropertyChanging();
					this._idPermissao = value;
					this.SendPropertyChanged("idPermissao");
					this.OnidPermissaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descricao", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string descricao
		{
			get
			{
				return this._descricao;
			}
			set
			{
				if ((this._descricao != value))
				{
					this.OndescricaoChanging(value);
					this.SendPropertyChanging();
					this._descricao = value;
					this.SendPropertyChanged("descricao");
					this.OndescricaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permissao_Permissao_TipoUtilizador", Storage="_Permissao_TipoUtilizadors", ThisKey="idPermissao", OtherKey="idPermissao")]
		public EntitySet<Permissao_TipoUtilizador> Permissao_TipoUtilizadors
		{
			get
			{
				return this._Permissao_TipoUtilizadors;
			}
			set
			{
				this._Permissao_TipoUtilizadors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Permissao_TipoUtilizadors(Permissao_TipoUtilizador entity)
		{
			this.SendPropertyChanging();
			entity.Permissao = this;
		}
		
		private void detach_Permissao_TipoUtilizadors(Permissao_TipoUtilizador entity)
		{
			this.SendPropertyChanging();
			entity.Permissao = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permissao_TipoUtilizador")]
	public partial class Permissao_TipoUtilizador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPermissao_TipoUtilizador;
		
		private int _idPermissao;
		
		private int _idTipoUtilizador;
		
		private EntityRef<Permissao> _Permissao;
		
		private EntityRef<TipoUtilizador> _TipoUtilizador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPermissao_TipoUtilizadorChanging(int value);
    partial void OnidPermissao_TipoUtilizadorChanged();
    partial void OnidPermissaoChanging(int value);
    partial void OnidPermissaoChanged();
    partial void OnidTipoUtilizadorChanging(int value);
    partial void OnidTipoUtilizadorChanged();
    #endregion
		
		public Permissao_TipoUtilizador()
		{
			this._Permissao = default(EntityRef<Permissao>);
			this._TipoUtilizador = default(EntityRef<TipoUtilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPermissao_TipoUtilizador", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPermissao_TipoUtilizador
		{
			get
			{
				return this._idPermissao_TipoUtilizador;
			}
			set
			{
				if ((this._idPermissao_TipoUtilizador != value))
				{
					this.OnidPermissao_TipoUtilizadorChanging(value);
					this.SendPropertyChanging();
					this._idPermissao_TipoUtilizador = value;
					this.SendPropertyChanged("idPermissao_TipoUtilizador");
					this.OnidPermissao_TipoUtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPermissao", DbType="Int NOT NULL")]
		public int idPermissao
		{
			get
			{
				return this._idPermissao;
			}
			set
			{
				if ((this._idPermissao != value))
				{
					if (this._Permissao.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPermissaoChanging(value);
					this.SendPropertyChanging();
					this._idPermissao = value;
					this.SendPropertyChanged("idPermissao");
					this.OnidPermissaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipoUtilizador", DbType="Int NOT NULL")]
		public int idTipoUtilizador
		{
			get
			{
				return this._idTipoUtilizador;
			}
			set
			{
				if ((this._idTipoUtilizador != value))
				{
					if (this._TipoUtilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTipoUtilizadorChanging(value);
					this.SendPropertyChanging();
					this._idTipoUtilizador = value;
					this.SendPropertyChanged("idTipoUtilizador");
					this.OnidTipoUtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permissao_Permissao_TipoUtilizador", Storage="_Permissao", ThisKey="idPermissao", OtherKey="idPermissao", IsForeignKey=true)]
		public Permissao Permissao
		{
			get
			{
				return this._Permissao.Entity;
			}
			set
			{
				Permissao previousValue = this._Permissao.Entity;
				if (((previousValue != value) 
							|| (this._Permissao.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permissao.Entity = null;
						previousValue.Permissao_TipoUtilizadors.Remove(this);
					}
					this._Permissao.Entity = value;
					if ((value != null))
					{
						value.Permissao_TipoUtilizadors.Add(this);
						this._idPermissao = value.idPermissao;
					}
					else
					{
						this._idPermissao = default(int);
					}
					this.SendPropertyChanged("Permissao");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUtilizador_Permissao_TipoUtilizador", Storage="_TipoUtilizador", ThisKey="idTipoUtilizador", OtherKey="idTipoUtilizador", IsForeignKey=true)]
		public TipoUtilizador TipoUtilizador
		{
			get
			{
				return this._TipoUtilizador.Entity;
			}
			set
			{
				TipoUtilizador previousValue = this._TipoUtilizador.Entity;
				if (((previousValue != value) 
							|| (this._TipoUtilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoUtilizador.Entity = null;
						previousValue.Permissao_TipoUtilizadors.Remove(this);
					}
					this._TipoUtilizador.Entity = value;
					if ((value != null))
					{
						value.Permissao_TipoUtilizadors.Add(this);
						this._idTipoUtilizador = value.idTipoUtilizador;
					}
					else
					{
						this._idTipoUtilizador = default(int);
					}
					this.SendPropertyChanged("TipoUtilizador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pontuacao_Pergunta")]
	public partial class Pontuacao_Pergunta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPontuacao_Pergunta;
		
		private double _valor;
		
		private int _idPontuacao_Quadrante;
		
		private int _idPergunta_Quadrante;
		
		private EntityRef<Pergunta_Quadrante> _Pergunta_Quadrante;
		
		private EntityRef<Pontuacao_Quadrante> _Pontuacao_Quadrante;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPontuacao_PerguntaChanging(int value);
    partial void OnidPontuacao_PerguntaChanged();
    partial void OnvalorChanging(double value);
    partial void OnvalorChanged();
    partial void OnidPontuacao_QuadranteChanging(int value);
    partial void OnidPontuacao_QuadranteChanged();
    partial void OnidPergunta_QuadranteChanging(int value);
    partial void OnidPergunta_QuadranteChanged();
    #endregion
		
		public Pontuacao_Pergunta()
		{
			this._Pergunta_Quadrante = default(EntityRef<Pergunta_Quadrante>);
			this._Pontuacao_Quadrante = default(EntityRef<Pontuacao_Quadrante>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPontuacao_Pergunta", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPontuacao_Pergunta
		{
			get
			{
				return this._idPontuacao_Pergunta;
			}
			set
			{
				if ((this._idPontuacao_Pergunta != value))
				{
					this.OnidPontuacao_PerguntaChanging(value);
					this.SendPropertyChanging();
					this._idPontuacao_Pergunta = value;
					this.SendPropertyChanged("idPontuacao_Pergunta");
					this.OnidPontuacao_PerguntaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valor", DbType="Float NOT NULL")]
		public double valor
		{
			get
			{
				return this._valor;
			}
			set
			{
				if ((this._valor != value))
				{
					this.OnvalorChanging(value);
					this.SendPropertyChanging();
					this._valor = value;
					this.SendPropertyChanged("valor");
					this.OnvalorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPontuacao_Quadrante", DbType="Int NOT NULL")]
		public int idPontuacao_Quadrante
		{
			get
			{
				return this._idPontuacao_Quadrante;
			}
			set
			{
				if ((this._idPontuacao_Quadrante != value))
				{
					if (this._Pontuacao_Quadrante.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPontuacao_QuadranteChanging(value);
					this.SendPropertyChanging();
					this._idPontuacao_Quadrante = value;
					this.SendPropertyChanged("idPontuacao_Quadrante");
					this.OnidPontuacao_QuadranteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPergunta_Quadrante", DbType="Int NOT NULL")]
		public int idPergunta_Quadrante
		{
			get
			{
				return this._idPergunta_Quadrante;
			}
			set
			{
				if ((this._idPergunta_Quadrante != value))
				{
					if (this._Pergunta_Quadrante.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPergunta_QuadranteChanging(value);
					this.SendPropertyChanging();
					this._idPergunta_Quadrante = value;
					this.SendPropertyChanged("idPergunta_Quadrante");
					this.OnidPergunta_QuadranteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pergunta_Quadrante_Pontuacao_Pergunta", Storage="_Pergunta_Quadrante", ThisKey="idPergunta_Quadrante", OtherKey="idPergunta_Quadrante", IsForeignKey=true)]
		public Pergunta_Quadrante Pergunta_Quadrante
		{
			get
			{
				return this._Pergunta_Quadrante.Entity;
			}
			set
			{
				Pergunta_Quadrante previousValue = this._Pergunta_Quadrante.Entity;
				if (((previousValue != value) 
							|| (this._Pergunta_Quadrante.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pergunta_Quadrante.Entity = null;
						previousValue.Pontuacao_Perguntas.Remove(this);
					}
					this._Pergunta_Quadrante.Entity = value;
					if ((value != null))
					{
						value.Pontuacao_Perguntas.Add(this);
						this._idPergunta_Quadrante = value.idPergunta_Quadrante;
					}
					else
					{
						this._idPergunta_Quadrante = default(int);
					}
					this.SendPropertyChanged("Pergunta_Quadrante");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pontuacao_Quadrante_Pontuacao_Pergunta", Storage="_Pontuacao_Quadrante", ThisKey="idPontuacao_Quadrante", OtherKey="idPontuacao_Quadrante", IsForeignKey=true)]
		public Pontuacao_Quadrante Pontuacao_Quadrante
		{
			get
			{
				return this._Pontuacao_Quadrante.Entity;
			}
			set
			{
				Pontuacao_Quadrante previousValue = this._Pontuacao_Quadrante.Entity;
				if (((previousValue != value) 
							|| (this._Pontuacao_Quadrante.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pontuacao_Quadrante.Entity = null;
						previousValue.Pontuacao_Perguntas.Remove(this);
					}
					this._Pontuacao_Quadrante.Entity = value;
					if ((value != null))
					{
						value.Pontuacao_Perguntas.Add(this);
						this._idPontuacao_Quadrante = value.idPontuacao_Quadrante;
					}
					else
					{
						this._idPontuacao_Quadrante = default(int);
					}
					this.SendPropertyChanged("Pontuacao_Quadrante");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pontuacao_Quadrante")]
	public partial class Pontuacao_Quadrante : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPontuacao_Quadrante;
		
		private double _valor;
		
		private int _idTeste;
		
		private int _idQuadrante_Tecnica;
		
		private EntitySet<Pontuacao_Pergunta> _Pontuacao_Perguntas;
		
		private EntityRef<Quadrante_Tecnica> _Quadrante_Tecnica;
		
		private EntityRef<Teste> _Teste;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPontuacao_QuadranteChanging(int value);
    partial void OnidPontuacao_QuadranteChanged();
    partial void OnvalorChanging(double value);
    partial void OnvalorChanged();
    partial void OnidTesteChanging(int value);
    partial void OnidTesteChanged();
    partial void OnidQuadrante_TecnicaChanging(int value);
    partial void OnidQuadrante_TecnicaChanged();
    #endregion
		
		public Pontuacao_Quadrante()
		{
			this._Pontuacao_Perguntas = new EntitySet<Pontuacao_Pergunta>(new Action<Pontuacao_Pergunta>(this.attach_Pontuacao_Perguntas), new Action<Pontuacao_Pergunta>(this.detach_Pontuacao_Perguntas));
			this._Quadrante_Tecnica = default(EntityRef<Quadrante_Tecnica>);
			this._Teste = default(EntityRef<Teste>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPontuacao_Quadrante", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPontuacao_Quadrante
		{
			get
			{
				return this._idPontuacao_Quadrante;
			}
			set
			{
				if ((this._idPontuacao_Quadrante != value))
				{
					this.OnidPontuacao_QuadranteChanging(value);
					this.SendPropertyChanging();
					this._idPontuacao_Quadrante = value;
					this.SendPropertyChanged("idPontuacao_Quadrante");
					this.OnidPontuacao_QuadranteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valor", DbType="Float NOT NULL")]
		public double valor
		{
			get
			{
				return this._valor;
			}
			set
			{
				if ((this._valor != value))
				{
					this.OnvalorChanging(value);
					this.SendPropertyChanging();
					this._valor = value;
					this.SendPropertyChanged("valor");
					this.OnvalorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTeste", DbType="Int NOT NULL")]
		public int idTeste
		{
			get
			{
				return this._idTeste;
			}
			set
			{
				if ((this._idTeste != value))
				{
					if (this._Teste.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTesteChanging(value);
					this.SendPropertyChanging();
					this._idTeste = value;
					this.SendPropertyChanged("idTeste");
					this.OnidTesteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idQuadrante_Tecnica", DbType="Int NOT NULL")]
		public int idQuadrante_Tecnica
		{
			get
			{
				return this._idQuadrante_Tecnica;
			}
			set
			{
				if ((this._idQuadrante_Tecnica != value))
				{
					if (this._Quadrante_Tecnica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidQuadrante_TecnicaChanging(value);
					this.SendPropertyChanging();
					this._idQuadrante_Tecnica = value;
					this.SendPropertyChanged("idQuadrante_Tecnica");
					this.OnidQuadrante_TecnicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pontuacao_Quadrante_Pontuacao_Pergunta", Storage="_Pontuacao_Perguntas", ThisKey="idPontuacao_Quadrante", OtherKey="idPontuacao_Quadrante")]
		public EntitySet<Pontuacao_Pergunta> Pontuacao_Perguntas
		{
			get
			{
				return this._Pontuacao_Perguntas;
			}
			set
			{
				this._Pontuacao_Perguntas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quadrante_Tecnica_Pontuacao_Quadrante", Storage="_Quadrante_Tecnica", ThisKey="idQuadrante_Tecnica", OtherKey="idQuadrante_Tecnica", IsForeignKey=true)]
		public Quadrante_Tecnica Quadrante_Tecnica
		{
			get
			{
				return this._Quadrante_Tecnica.Entity;
			}
			set
			{
				Quadrante_Tecnica previousValue = this._Quadrante_Tecnica.Entity;
				if (((previousValue != value) 
							|| (this._Quadrante_Tecnica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quadrante_Tecnica.Entity = null;
						previousValue.Pontuacao_Quadrantes.Remove(this);
					}
					this._Quadrante_Tecnica.Entity = value;
					if ((value != null))
					{
						value.Pontuacao_Quadrantes.Add(this);
						this._idQuadrante_Tecnica = value.idQuadrante_Tecnica;
					}
					else
					{
						this._idQuadrante_Tecnica = default(int);
					}
					this.SendPropertyChanged("Quadrante_Tecnica");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teste_Pontuacao_Quadrante", Storage="_Teste", ThisKey="idTeste", OtherKey="idTeste", IsForeignKey=true)]
		public Teste Teste
		{
			get
			{
				return this._Teste.Entity;
			}
			set
			{
				Teste previousValue = this._Teste.Entity;
				if (((previousValue != value) 
							|| (this._Teste.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Teste.Entity = null;
						previousValue.Pontuacao_Quadrantes.Remove(this);
					}
					this._Teste.Entity = value;
					if ((value != null))
					{
						value.Pontuacao_Quadrantes.Add(this);
						this._idTeste = value.idTeste;
					}
					else
					{
						this._idTeste = default(int);
					}
					this.SendPropertyChanged("Teste");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pontuacao_Perguntas(Pontuacao_Pergunta entity)
		{
			this.SendPropertyChanging();
			entity.Pontuacao_Quadrante = this;
		}
		
		private void detach_Pontuacao_Perguntas(Pontuacao_Pergunta entity)
		{
			this.SendPropertyChanging();
			entity.Pontuacao_Quadrante = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quadrante")]
	public partial class Quadrante : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idQuadrante;
		
		private int _idUtilizador;
		
		private string _nome;
		
		private EntitySet<Pergunta_Quadrante> _Pergunta_Quadrantes;
		
		private EntitySet<Quadrante_Tecnica> _Quadrante_Tecnicas;
		
		private EntityRef<Utilizador> _Utilizador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidQuadranteChanging(int value);
    partial void OnidQuadranteChanged();
    partial void OnidUtilizadorChanging(int value);
    partial void OnidUtilizadorChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    #endregion
		
		public Quadrante()
		{
			this._Pergunta_Quadrantes = new EntitySet<Pergunta_Quadrante>(new Action<Pergunta_Quadrante>(this.attach_Pergunta_Quadrantes), new Action<Pergunta_Quadrante>(this.detach_Pergunta_Quadrantes));
			this._Quadrante_Tecnicas = new EntitySet<Quadrante_Tecnica>(new Action<Quadrante_Tecnica>(this.attach_Quadrante_Tecnicas), new Action<Quadrante_Tecnica>(this.detach_Quadrante_Tecnicas));
			this._Utilizador = default(EntityRef<Utilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idQuadrante", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idQuadrante
		{
			get
			{
				return this._idQuadrante;
			}
			set
			{
				if ((this._idQuadrante != value))
				{
					this.OnidQuadranteChanging(value);
					this.SendPropertyChanging();
					this._idQuadrante = value;
					this.SendPropertyChanged("idQuadrante");
					this.OnidQuadranteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUtilizador", DbType="Int NOT NULL")]
		public int idUtilizador
		{
			get
			{
				return this._idUtilizador;
			}
			set
			{
				if ((this._idUtilizador != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUtilizadorChanging(value);
					this.SendPropertyChanging();
					this._idUtilizador = value;
					this.SendPropertyChanged("idUtilizador");
					this.OnidUtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quadrante_Pergunta_Quadrante", Storage="_Pergunta_Quadrantes", ThisKey="idQuadrante", OtherKey="idQuadrante")]
		public EntitySet<Pergunta_Quadrante> Pergunta_Quadrantes
		{
			get
			{
				return this._Pergunta_Quadrantes;
			}
			set
			{
				this._Pergunta_Quadrantes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quadrante_Quadrante_Tecnica", Storage="_Quadrante_Tecnicas", ThisKey="idQuadrante", OtherKey="idQuadrante")]
		public EntitySet<Quadrante_Tecnica> Quadrante_Tecnicas
		{
			get
			{
				return this._Quadrante_Tecnicas;
			}
			set
			{
				this._Quadrante_Tecnicas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Quadrante", Storage="_Utilizador", ThisKey="idUtilizador", OtherKey="idUtilizador", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Quadrantes.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Quadrantes.Add(this);
						this._idUtilizador = value.idUtilizador;
					}
					else
					{
						this._idUtilizador = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pergunta_Quadrantes(Pergunta_Quadrante entity)
		{
			this.SendPropertyChanging();
			entity.Quadrante = this;
		}
		
		private void detach_Pergunta_Quadrantes(Pergunta_Quadrante entity)
		{
			this.SendPropertyChanging();
			entity.Quadrante = null;
		}
		
		private void attach_Quadrante_Tecnicas(Quadrante_Tecnica entity)
		{
			this.SendPropertyChanging();
			entity.Quadrante = this;
		}
		
		private void detach_Quadrante_Tecnicas(Quadrante_Tecnica entity)
		{
			this.SendPropertyChanging();
			entity.Quadrante = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quadrante_Tecnica")]
	public partial class Quadrante_Tecnica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idQuadrante_Tecnica;
		
		private int _idQuadrante;
		
		private int _idTecnica;
		
		private EntitySet<Pontuacao_Quadrante> _Pontuacao_Quadrantes;
		
		private EntityRef<Quadrante> _Quadrante;
		
		private EntityRef<Tecnica> _Tecnica;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidQuadrante_TecnicaChanging(int value);
    partial void OnidQuadrante_TecnicaChanged();
    partial void OnidQuadranteChanging(int value);
    partial void OnidQuadranteChanged();
    partial void OnidTecnicaChanging(int value);
    partial void OnidTecnicaChanged();
    #endregion
		
		public Quadrante_Tecnica()
		{
			this._Pontuacao_Quadrantes = new EntitySet<Pontuacao_Quadrante>(new Action<Pontuacao_Quadrante>(this.attach_Pontuacao_Quadrantes), new Action<Pontuacao_Quadrante>(this.detach_Pontuacao_Quadrantes));
			this._Quadrante = default(EntityRef<Quadrante>);
			this._Tecnica = default(EntityRef<Tecnica>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idQuadrante_Tecnica", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idQuadrante_Tecnica
		{
			get
			{
				return this._idQuadrante_Tecnica;
			}
			set
			{
				if ((this._idQuadrante_Tecnica != value))
				{
					this.OnidQuadrante_TecnicaChanging(value);
					this.SendPropertyChanging();
					this._idQuadrante_Tecnica = value;
					this.SendPropertyChanged("idQuadrante_Tecnica");
					this.OnidQuadrante_TecnicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idQuadrante", DbType="Int NOT NULL")]
		public int idQuadrante
		{
			get
			{
				return this._idQuadrante;
			}
			set
			{
				if ((this._idQuadrante != value))
				{
					if (this._Quadrante.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidQuadranteChanging(value);
					this.SendPropertyChanging();
					this._idQuadrante = value;
					this.SendPropertyChanged("idQuadrante");
					this.OnidQuadranteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTecnica", DbType="Int NOT NULL")]
		public int idTecnica
		{
			get
			{
				return this._idTecnica;
			}
			set
			{
				if ((this._idTecnica != value))
				{
					if (this._Tecnica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTecnicaChanging(value);
					this.SendPropertyChanging();
					this._idTecnica = value;
					this.SendPropertyChanged("idTecnica");
					this.OnidTecnicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quadrante_Tecnica_Pontuacao_Quadrante", Storage="_Pontuacao_Quadrantes", ThisKey="idQuadrante_Tecnica", OtherKey="idQuadrante_Tecnica")]
		public EntitySet<Pontuacao_Quadrante> Pontuacao_Quadrantes
		{
			get
			{
				return this._Pontuacao_Quadrantes;
			}
			set
			{
				this._Pontuacao_Quadrantes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quadrante_Quadrante_Tecnica", Storage="_Quadrante", ThisKey="idQuadrante", OtherKey="idQuadrante", IsForeignKey=true)]
		public Quadrante Quadrante
		{
			get
			{
				return this._Quadrante.Entity;
			}
			set
			{
				Quadrante previousValue = this._Quadrante.Entity;
				if (((previousValue != value) 
							|| (this._Quadrante.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Quadrante.Entity = null;
						previousValue.Quadrante_Tecnicas.Remove(this);
					}
					this._Quadrante.Entity = value;
					if ((value != null))
					{
						value.Quadrante_Tecnicas.Add(this);
						this._idQuadrante = value.idQuadrante;
					}
					else
					{
						this._idQuadrante = default(int);
					}
					this.SendPropertyChanged("Quadrante");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tecnica_Quadrante_Tecnica", Storage="_Tecnica", ThisKey="idTecnica", OtherKey="idTecnica", IsForeignKey=true)]
		public Tecnica Tecnica
		{
			get
			{
				return this._Tecnica.Entity;
			}
			set
			{
				Tecnica previousValue = this._Tecnica.Entity;
				if (((previousValue != value) 
							|| (this._Tecnica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tecnica.Entity = null;
						previousValue.Quadrante_Tecnicas.Remove(this);
					}
					this._Tecnica.Entity = value;
					if ((value != null))
					{
						value.Quadrante_Tecnicas.Add(this);
						this._idTecnica = value.idTecnica;
					}
					else
					{
						this._idTecnica = default(int);
					}
					this.SendPropertyChanged("Tecnica");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pontuacao_Quadrantes(Pontuacao_Quadrante entity)
		{
			this.SendPropertyChanging();
			entity.Quadrante_Tecnica = this;
		}
		
		private void detach_Pontuacao_Quadrantes(Pontuacao_Quadrante entity)
		{
			this.SendPropertyChanging();
			entity.Quadrante_Tecnica = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tecnica")]
	public partial class Tecnica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTecnica;
		
		private string _nome;
		
		private System.DateTime _dataCriacao;
		
		private int _idUtilizador;
		
		private EntitySet<Quadrante_Tecnica> _Quadrante_Tecnicas;
		
		private EntitySet<Teste> _Testes;
		
		private EntityRef<Utilizador> _Utilizador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTecnicaChanging(int value);
    partial void OnidTecnicaChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OndataCriacaoChanging(System.DateTime value);
    partial void OndataCriacaoChanged();
    partial void OnidUtilizadorChanging(int value);
    partial void OnidUtilizadorChanged();
    #endregion
		
		public Tecnica()
		{
			this._Quadrante_Tecnicas = new EntitySet<Quadrante_Tecnica>(new Action<Quadrante_Tecnica>(this.attach_Quadrante_Tecnicas), new Action<Quadrante_Tecnica>(this.detach_Quadrante_Tecnicas));
			this._Testes = new EntitySet<Teste>(new Action<Teste>(this.attach_Testes), new Action<Teste>(this.detach_Testes));
			this._Utilizador = default(EntityRef<Utilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTecnica", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTecnica
		{
			get
			{
				return this._idTecnica;
			}
			set
			{
				if ((this._idTecnica != value))
				{
					this.OnidTecnicaChanging(value);
					this.SendPropertyChanging();
					this._idTecnica = value;
					this.SendPropertyChanged("idTecnica");
					this.OnidTecnicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataCriacao", DbType="DateTime NOT NULL")]
		public System.DateTime dataCriacao
		{
			get
			{
				return this._dataCriacao;
			}
			set
			{
				if ((this._dataCriacao != value))
				{
					this.OndataCriacaoChanging(value);
					this.SendPropertyChanging();
					this._dataCriacao = value;
					this.SendPropertyChanged("dataCriacao");
					this.OndataCriacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUtilizador", DbType="Int NOT NULL")]
		public int idUtilizador
		{
			get
			{
				return this._idUtilizador;
			}
			set
			{
				if ((this._idUtilizador != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUtilizadorChanging(value);
					this.SendPropertyChanging();
					this._idUtilizador = value;
					this.SendPropertyChanged("idUtilizador");
					this.OnidUtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tecnica_Quadrante_Tecnica", Storage="_Quadrante_Tecnicas", ThisKey="idTecnica", OtherKey="idTecnica")]
		public EntitySet<Quadrante_Tecnica> Quadrante_Tecnicas
		{
			get
			{
				return this._Quadrante_Tecnicas;
			}
			set
			{
				this._Quadrante_Tecnicas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tecnica_Teste", Storage="_Testes", ThisKey="idTecnica", OtherKey="idTecnica")]
		public EntitySet<Teste> Testes
		{
			get
			{
				return this._Testes;
			}
			set
			{
				this._Testes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Tecnica", Storage="_Utilizador", ThisKey="idUtilizador", OtherKey="idUtilizador", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Tecnicas.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Tecnicas.Add(this);
						this._idUtilizador = value.idUtilizador;
					}
					else
					{
						this._idUtilizador = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Quadrante_Tecnicas(Quadrante_Tecnica entity)
		{
			this.SendPropertyChanging();
			entity.Tecnica = this;
		}
		
		private void detach_Quadrante_Tecnicas(Quadrante_Tecnica entity)
		{
			this.SendPropertyChanging();
			entity.Tecnica = null;
		}
		
		private void attach_Testes(Teste entity)
		{
			this.SendPropertyChanging();
			entity.Tecnica = this;
		}
		
		private void detach_Testes(Teste entity)
		{
			this.SendPropertyChanging();
			entity.Tecnica = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teste")]
	public partial class Teste : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTeste;
		
		private string _nome;
		
		private System.DateTime _dataRealizacao;
		
		private int _classificacao;
		
		private System.Data.Linq.Binary _grafico;
		
		private int _idUtilizador;
		
		private int _idTecnica;
		
		private EntitySet<Pontuacao_Quadrante> _Pontuacao_Quadrantes;
		
		private EntityRef<Tecnica> _Tecnica;
		
		private EntityRef<Utilizador> _Utilizador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTesteChanging(int value);
    partial void OnidTesteChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    partial void OndataRealizacaoChanging(System.DateTime value);
    partial void OndataRealizacaoChanged();
    partial void OnclassificacaoChanging(int value);
    partial void OnclassificacaoChanged();
    partial void OngraficoChanging(System.Data.Linq.Binary value);
    partial void OngraficoChanged();
    partial void OnidUtilizadorChanging(int value);
    partial void OnidUtilizadorChanged();
    partial void OnidTecnicaChanging(int value);
    partial void OnidTecnicaChanged();
    #endregion
		
		public Teste()
		{
			this._Pontuacao_Quadrantes = new EntitySet<Pontuacao_Quadrante>(new Action<Pontuacao_Quadrante>(this.attach_Pontuacao_Quadrantes), new Action<Pontuacao_Quadrante>(this.detach_Pontuacao_Quadrantes));
			this._Tecnica = default(EntityRef<Tecnica>);
			this._Utilizador = default(EntityRef<Utilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTeste", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTeste
		{
			get
			{
				return this._idTeste;
			}
			set
			{
				if ((this._idTeste != value))
				{
					this.OnidTesteChanging(value);
					this.SendPropertyChanging();
					this._idTeste = value;
					this.SendPropertyChanged("idTeste");
					this.OnidTesteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataRealizacao", DbType="DateTime NOT NULL")]
		public System.DateTime dataRealizacao
		{
			get
			{
				return this._dataRealizacao;
			}
			set
			{
				if ((this._dataRealizacao != value))
				{
					this.OndataRealizacaoChanging(value);
					this.SendPropertyChanging();
					this._dataRealizacao = value;
					this.SendPropertyChanged("dataRealizacao");
					this.OndataRealizacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_classificacao", DbType="Int NOT NULL")]
		public int classificacao
		{
			get
			{
				return this._classificacao;
			}
			set
			{
				if ((this._classificacao != value))
				{
					this.OnclassificacaoChanging(value);
					this.SendPropertyChanging();
					this._classificacao = value;
					this.SendPropertyChanged("classificacao");
					this.OnclassificacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_grafico", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary grafico
		{
			get
			{
				return this._grafico;
			}
			set
			{
				if ((this._grafico != value))
				{
					this.OngraficoChanging(value);
					this.SendPropertyChanging();
					this._grafico = value;
					this.SendPropertyChanged("grafico");
					this.OngraficoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUtilizador", DbType="Int NOT NULL")]
		public int idUtilizador
		{
			get
			{
				return this._idUtilizador;
			}
			set
			{
				if ((this._idUtilizador != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUtilizadorChanging(value);
					this.SendPropertyChanging();
					this._idUtilizador = value;
					this.SendPropertyChanged("idUtilizador");
					this.OnidUtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTecnica", DbType="Int NOT NULL")]
		public int idTecnica
		{
			get
			{
				return this._idTecnica;
			}
			set
			{
				if ((this._idTecnica != value))
				{
					if (this._Tecnica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidTecnicaChanging(value);
					this.SendPropertyChanging();
					this._idTecnica = value;
					this.SendPropertyChanged("idTecnica");
					this.OnidTecnicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Teste_Pontuacao_Quadrante", Storage="_Pontuacao_Quadrantes", ThisKey="idTeste", OtherKey="idTeste")]
		public EntitySet<Pontuacao_Quadrante> Pontuacao_Quadrantes
		{
			get
			{
				return this._Pontuacao_Quadrantes;
			}
			set
			{
				this._Pontuacao_Quadrantes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tecnica_Teste", Storage="_Tecnica", ThisKey="idTecnica", OtherKey="idTecnica", IsForeignKey=true)]
		public Tecnica Tecnica
		{
			get
			{
				return this._Tecnica.Entity;
			}
			set
			{
				Tecnica previousValue = this._Tecnica.Entity;
				if (((previousValue != value) 
							|| (this._Tecnica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tecnica.Entity = null;
						previousValue.Testes.Remove(this);
					}
					this._Tecnica.Entity = value;
					if ((value != null))
					{
						value.Testes.Add(this);
						this._idTecnica = value.idTecnica;
					}
					else
					{
						this._idTecnica = default(int);
					}
					this.SendPropertyChanged("Tecnica");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Teste", Storage="_Utilizador", ThisKey="idUtilizador", OtherKey="idUtilizador", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Testes.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Testes.Add(this);
						this._idUtilizador = value.idUtilizador;
					}
					else
					{
						this._idUtilizador = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pontuacao_Quadrantes(Pontuacao_Quadrante entity)
		{
			this.SendPropertyChanging();
			entity.Teste = this;
		}
		
		private void detach_Pontuacao_Quadrantes(Pontuacao_Quadrante entity)
		{
			this.SendPropertyChanging();
			entity.Teste = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoUtilizador")]
	public partial class TipoUtilizador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTipoUtilizador;
		
		private string _nome;
		
		private EntitySet<Utilizador> _Utilizadors;
		
		private EntitySet<Permissao_TipoUtilizador> _Permissao_TipoUtilizadors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTipoUtilizadorChanging(int value);
    partial void OnidTipoUtilizadorChanged();
    partial void OnnomeChanging(string value);
    partial void OnnomeChanged();
    #endregion
		
		public TipoUtilizador()
		{
			this._Utilizadors = new EntitySet<Utilizador>(new Action<Utilizador>(this.attach_Utilizadors), new Action<Utilizador>(this.detach_Utilizadors));
			this._Permissao_TipoUtilizadors = new EntitySet<Permissao_TipoUtilizador>(new Action<Permissao_TipoUtilizador>(this.attach_Permissao_TipoUtilizadors), new Action<Permissao_TipoUtilizador>(this.detach_Permissao_TipoUtilizadors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTipoUtilizador", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTipoUtilizador
		{
			get
			{
				return this._idTipoUtilizador;
			}
			set
			{
				if ((this._idTipoUtilizador != value))
				{
					this.OnidTipoUtilizadorChanging(value);
					this.SendPropertyChanging();
					this._idTipoUtilizador = value;
					this.SendPropertyChanged("idTipoUtilizador");
					this.OnidTipoUtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nome
		{
			get
			{
				return this._nome;
			}
			set
			{
				if ((this._nome != value))
				{
					this.OnnomeChanging(value);
					this.SendPropertyChanging();
					this._nome = value;
					this.SendPropertyChanged("nome");
					this.OnnomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUtilizador_Utilizador", Storage="_Utilizadors", ThisKey="idTipoUtilizador", OtherKey="idTipoUtilizador")]
		public EntitySet<Utilizador> Utilizadors
		{
			get
			{
				return this._Utilizadors;
			}
			set
			{
				this._Utilizadors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoUtilizador_Permissao_TipoUtilizador", Storage="_Permissao_TipoUtilizadors", ThisKey="idTipoUtilizador", OtherKey="idTipoUtilizador")]
		public EntitySet<Permissao_TipoUtilizador> Permissao_TipoUtilizadors
		{
			get
			{
				return this._Permissao_TipoUtilizadors;
			}
			set
			{
				this._Permissao_TipoUtilizadors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Utilizadors(Utilizador entity)
		{
			this.SendPropertyChanging();
			entity.TipoUtilizador = this;
		}
		
		private void detach_Utilizadors(Utilizador entity)
		{
			this.SendPropertyChanging();
			entity.TipoUtilizador = null;
		}
		
		private void attach_Permissao_TipoUtilizadors(Permissao_TipoUtilizador entity)
		{
			this.SendPropertyChanging();
			entity.TipoUtilizador = this;
		}
		
		private void detach_Permissao_TipoUtilizadors(Permissao_TipoUtilizador entity)
		{
			this.SendPropertyChanging();
			entity.TipoUtilizador = null;
		}
	}
}
#pragma warning restore 1591
